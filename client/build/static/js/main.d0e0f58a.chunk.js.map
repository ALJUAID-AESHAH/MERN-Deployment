{"version":3,"sources":["views/Main.js","components/PetForm.js","views/Detail.js","views/Update.js","App.js","reportWebVitals.js","index.js"],"names":["useState","pet","setPet","setLoaded","useEffect","axios","get","then","res","data","to","style","margin","map","index","name","type","_id","errors","setErrors","setName","setType","desc","setDesc","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","err","onSubmit","e","preventDefault","post","console","log","navigate","catch","errorResponse","response","errorArr","Object","keys","key","push","message","onChange","target","value","props","id","onClick","petId","delete","put","App","className","Main","path","PetForm","Detail","Update","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0e0f58a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios'\r\nexport default () => {\r\n    const [pet, setPet] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/')\r\n            .then(res => {\r\n                setPet(res.data);\r\n                setLoaded(true);\r\n            });\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h2>Pet Shelter</h2>\r\n            <p>These pets are looking for a good home</p>\r\n            <Link to={\"/pets/new\"}>\r\n                add a pet to the shelter\r\n            </Link>\r\n            <table style={{margin:'auto'}}>\r\n                <thead >\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {pet.map((pet, index) => {\r\n                        return <tr key={index}>\r\n                            <td>{pet.name}</td>\r\n                            <td>{pet.type}</td>\r\n                            <td>\r\n                                <Link to={\"/pets/\" + pet._id}>\r\n                                    details\r\n                                </Link>\r\n                                |\r\n                                <Link to={\"/pets/\" + pet._id+'/edit'}>\r\n                                    edit\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\nexport default () => {\r\n    const [errors, setErrors] = useState([])\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\")\r\n    const [skill2, setSkill2] = useState(\"\")\r\n    const [skill3, setSkill3] = useState(\"\")\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        axios.post('http://localhost:8000/pets/new', {\r\n            name,\r\n            type,\r\n            desc,\r\n            skill1,\r\n            skill2,\r\n            skill3\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                navigate(\"/\")\r\n            })\r\n            .catch((err) => {\r\n                const errorResponse = err.response.data.errors \r\n                const errorArr = [] \r\n                for (const key of Object.keys(errorResponse)) {\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <h2> Pet Shelter </h2>\r\n            <Link to={\"/\"}>\r\n                back to home\r\n        </Link>\r\n            <p>Know a pet needing a home?</p>\r\n            {errors.map((err, index) => <p key={index}>{err}</p>)}\r\n            <form onSubmit={onSubmitHandler}>\r\n                <p>\r\n                    <label>Pet Name</label><br />\r\n                    <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\r\n                </p>\r\n                <p>\r\n                    <label>Pet Type</label><br />\r\n                    <input type=\"text\" onChange={(e) => setType(e.target.value)} value={type} />\r\n                </p>\r\n                <p>\r\n                    <label>Pet Description</label><br />\r\n                    <input type=\"text\" onChange={(e) => setDesc(e.target.value)} value={desc} />\r\n                </p>\r\n                <p>Skills (optional)</p>\r\n                <p>\r\n                    <label>skill 1</label><br />\r\n                    <input type=\"text\" onChange={(e) => setSkill1(e.target.value)} value={skill1} />\r\n                </p>\r\n                <p>\r\n                    <label>skill 2</label><br />\r\n                    <input type=\"text\" onChange={(e) => setSkill2(e.target.value)} value={skill2} />\r\n                </p>\r\n                <p>\r\n                    <label>skill 3</label><br />\r\n                    <input type=\"text\" onChange={(e) => setSkill3(e.target.value)} value={skill3} />\r\n                </p>\r\n                <input type=\"submit\" value=\"Add Pet\" />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nexport default props => {\r\n    const [pet, setPet] = useState({})\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/pets/\" + props.id)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setPet(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n    const deletePet = (petId) => {\r\n        axios.delete('http://localhost:8000/pets/' + petId)\r\n            .then(res => {\r\n                navigate('/');\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Pet Shelter</h2>\r\n            <Link to={\"/\"}>\r\n            back to home\r\n            </Link>\r\n            <p>\r\n            Details about: {pet.name}          \r\n            <button onClick={(e) => { deletePet(pet._id) }}>\r\n                Adopt {pet.name}\r\n            </button>\r\n            </p>\r\n            <p><h3>Pet type</h3> {pet.type}</p>\r\n            <p><h3>Description</h3> {pet.desc}</p>\r\n            <h3>Skills</h3>\r\n            <p>{pet.skill1}</p> \r\n            <p>{pet.skill2}</p>\r\n            <p>{pet.skill3}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\nexport default props => {\r\n    const { id } = props;\r\n    const [errors, setErrors] = useState([])\r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [skill1, setSkill1] = useState(\"\")\r\n    const [skill2, setSkill2] = useState(\"\")\r\n    const [skill3, setSkill3] = useState(\"\")\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/pets/' + id)\r\n            .then(res => {\r\n                setName(res.data.name);\r\n                setType(res.data.type);\r\n                setDesc(res.data.desc);\r\n                setSkill1(res.data.skill1)\r\n                setSkill2(res.data.skill2)\r\n                setSkill3(res.data.skill3)\r\n            })\r\n    }, [])\r\n    const updatePet = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/' + id + '/edit', {\r\n            name,\r\n            type,\r\n            desc,\r\n            skill1,\r\n            skill2,\r\n            skill3\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            navigate(\"/\")\r\n        })\r\n        .catch((err) => {\r\n            const errorResponse = err.response.data.errors \r\n            const errorArr = [] \r\n            for (const key of Object.keys(errorResponse)) {\r\n                errorArr.push(errorResponse[key].message)\r\n            }\r\n            setErrors(errorArr)\r\n        })\r\n}\r\n    return (\r\n        <div>\r\n            <h1>Pet Shelter</h1>\r\n            {errors.map((err, index) => <p key={index}>{err}</p>)}\r\n            <Link to={\"/\"}>\r\n            back to home\r\n            </Link>\r\n            <p>Edit {name}</p>\r\n            <form onSubmit={updatePet}>\r\n                <p>\r\n                    <label>Pet Name</label><br />\r\n                    <input type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={(e) => { setName(e.target.value) }} />\r\n                </p>\r\n                <p>\r\n                    <label>Pet Type</label><br />\r\n                    <input type=\"text\"\r\n                        name=\"type\"\r\n                        value={type}\r\n                        onChange={(e) => { setType(e.target.value) }} />\r\n                </p>\r\n                <p>\r\n                    <label>Pet Description</label><br />\r\n                    <input type=\"text\"\r\n                        name=\"desc\"\r\n                        value={desc}\r\n                        onChange={(e) => { setDesc(e.target.value) }} />\r\n                </p>\r\n                <p>Skills (optional)</p>\r\n                <p>\r\n                    <label>skill 1</label><br />\r\n                    <input type=\"text\" onChange={(e) => setSkill1(e.target.value)} value={skill1} />\r\n                </p>\r\n                <p>\r\n                    <label>skill 2</label><br />\r\n                    <input type=\"text\" onChange={(e) => setSkill2(e.target.value)} value={skill2} />\r\n                </p>\r\n                <p>\r\n                    <label>skill 3</label><br />\r\n                    <input type=\"text\" onChange={(e) => setSkill3(e.target.value)} value={skill3} />\r\n                </p>\r\n                <input type=\"submit\" value=\"Edit Pet\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\nimport { Router } from '@reach/router';\nimport Main from './views/Main';\nimport PetForm from './components/PetForm';\nimport Detail from './views/Detail';\nimport Update from './views/Update'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Main path=\"/\"/>\n        <PetForm path=\"/pets/new\"/>\n        <Detail path=\"/pets/:id\" /> \n        <Update path='/pets/:id/edit'/> \n      </Router>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}